/*******************************************************************************
 * Copyright (c) 2020 Juan Boubeta Puig, José Antonio Peregrina Pérez
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *	   Juan Boubeta Puig - Initial implementation.
 *     José Antonio Peregrina Pérez - initial metamodel and implementation
 ******************************************************************************/

@namespace(uri="www.uca.es/modeling/cep/cepapp", prefix="cepapp")
package cepapp;

@gmf.diagram(model.extension="cepapp", diagram.extension="cepapp_diagram")
class CEPApp { 
   attr String name;
   attr String description;
   attr Date creationDate;
   attr String domainName;
   val SourceElement[*] sourceElements;
   val SinkElement[*] sinkElements;
   val Link[*] links;
}

@gmf.link(label="", source="origin", target="destination",
	source.constraint="self <> oppositeEnd
	and (
		(self.oclIsKindOf(SourceElement) and oppositeEnd.oclIsKindOf(SourceElement))
		or (self.oclIsKindOf(SinkElement) and oppositeEnd.oclIsKindOf(SinkElement))
	)",
	target.constraint="self <> oppositeEnd",
	source.decoration="none", target.decoration="arrow", color="110,110,110",
	tool.name="Link", tool.description="Add a link")
class Link {
   attr int order;
   ref Origin#outboundLink origin;
   ref Destination#inboundLink destination;
}

abstract class Origin {
   ref Link[*]#origin outboundLink;
}

abstract class Destination {
   ref Link[*]#destination inboundLink;
}

abstract class SourceElement{

}

abstract class SinkElement{

}

abstract class Mappable{
	attr MappingType mappingType;
}

abstract class InMemory extends Mappable{
	attr String topic;
}

abstract class File extends Mappable{
	
}

/*abstract class Email extends Mappable{
	attr String username; // Required
	attr String password; //  Required
	attr String host; // Required, default in Sink = smtp.gmail.com, default in Source = pop3.gmail.com
}

abstract class Http extends Mappable{
	attr String url; // Required
}

abstract class Database extends Mappable{
	attr String primary_key; // Required
}*/

/*abstract class RDBMS extends Database{
	attr String jdbc_url;
	attr String username;
	attr String password;
	attr String jdbc_driver_name;
	attr String index;
}*/

/*abstract class HBase extends Database{
	attr String table_name;
	attr String column_family_name;
	attr String[*] any_hbase_property;
}*/

/*abstract class MongoDB extends Database {
	attr String uri; // Required
	attr String index;
	attr String collectionName; //Default = Name of the stream
}*/

abstract class MQTT extends Mappable{
	attr String url;
	attr String topic;
	attr String username; // Default = Null
	attr String password; // Default = Empty
	attr String client_id; // Default = Generated by the system
}


//Source Part

@gmf.node(figure="svg", label.placement="none", tool.name="In Memory Source",
 svg.uri="platform:/plugin/es.uca.modeling.cep.app.figures/svg/InMemoryInput.svg")
class InMemoryInput extends InMemory, SourceElement, Origin{

}

/*@gmf.node(figure="svg", label.placement="none", tool.name="Source Email",
 svg.uri="platform:/plugin/es.uca.modeling.cep.app.figures/svg/SourceEmail.svg")
class SourceEmail extends Email, SourceElement, Origin {
	attr int port = 993;
	attr String folder;
}*/

@gmf.node(figure="svg", label.placement="none", tool.name="Input File",
 svg.uri="platform:/plugin/es.uca.modeling.cep.app.figures/svg/InputFile.svg")
class InputFile extends File, SourceElement, Origin {
	attr String dir_uri; //Only one of these two should be provided.
	attr String file_uri;
}

/*@gmf.node(label.placement="none", tool.name="Source RDBMS")
class SourceRDBMS extends RDBMS, SourceElement, Origin{

}

@gmf.node(label.placement="none", tool.name="Source Apache Hbase database")
class SourceHBase extends HBase, SourceElement, Origin{

}

@gmf.node(label.placement="none", tool.name="Source MongoDB database")
class SourceMongoDB extends MongoDB, SourceElement, Origin{

}*/


/*@gmf.node(figure="svg", label.placement="none", tool.name="Source HTTP",
 svg.uri="platform:/plugin/es.uca.modeling.cep.app.figures/svg/SourceHttp.svg")
class SourceHttp extends Http, SourceElement, Origin{

}*/

@gmf.node(figure="svg", label.placement="none", tool.name="Source MQTT",
 svg.uri="platform:/plugin/es.uca.modeling.cep.app.figures/svg/SourceMqtt.svg")
class SourceMqtt extends MQTT, SourceElement, Origin {

}

@gmf.node(figure="rectangle", label="typeName", border.color="110,110,110",
tool.name="Event", tool.description="Add an event", resizable="false")
class Event extends SourceElement, Destination{
   attr String typeName;
   attr String imagePath;

   @gmf.compartment(layout="list")
   val EventProperty[*]#referencedEvent eventProperties;
}

@gmf.node(figure="rectangle", label="name", border.color="110,110,110",
tool.name="Event Property", tool.description="Add an event property", resizable="false")
class EventProperty{
   attr String name;
   attr PropertyTypeValue type;
   attr String imagePath;
   ref Event#eventProperties referencedEvent;

   @gmf.compartment(layout="list")
   val EventProperty[*]#referencedEventProperty eventProperties;
   ref EventProperty#eventProperties referencedEventProperty;
}

/*@gmf.node(figure="svg", label.placement="none", tool.name="Source Twitter",
 svg.uri="platform:/plugin/es.uca.modeling.cep.app.figures/svg/Twitter.svg")
class Twitter extends Mappable, SourceElement, Origin{
	attr String consumer_key;
	attr String consumer_secret;
	attr String access_token;
	attr String access_token_secret;
	attr twitter_mode mode;
}*/


//Sink Part

@gmf.node(figure="svg", label.placement="none", tool.name="In Memory Sink",
 svg.uri="platform:/plugin/es.uca.modeling.cep.app.figures/svg/InMemoryOutput.svg")
class InMemoryOutput extends InMemory, SinkElement, Destination{

}

@gmf.node(figure="rectangle", label="typeName", border.color="110,110,110", label.readOnly="true",
	tool.name="New Complex Event", tool.description="Add a new complex event")
class ComplexEvent extends SinkElement, Origin{
	attr String typeName;
   	attr String imagePath;
	
	@gmf.compartment(layout="list")
   	val ComplexEventProperty[*]#referencedComplexEvent complexEventProperties;
}

@gmf.node(figure="rectangle", label="name", border.color="110,110,110",
	tool.name="New Complex Event Property", tool.description="Add a new complex event property")
class ComplexEventProperty{
   attr String name;
   attr String imagePath;
   attr PropertyTypeValue type;
   ref ComplexEvent#complexEventProperties referencedComplexEvent;
   
   @gmf.compartment(layout="list")
   val ComplexEventProperty[*]#referencedComplexEventProperty complexEventProperties;
   ref ComplexEventProperty#complexEventProperties referencedComplexEventProperty;
}

/*@gmf.node(figure="svg", label.placement="none", tool.name="Sink Email",
 svg.uri="platform:/plugin/es.uca.modeling.cep.app.figures/svg/SinkEmail.svg")
class SinkEmail extends Email, SinkElement, Destination {
	attr String address;
	attr String to;
	attr String subject;
}*/

@gmf.node(figure="svg", label.placement="none", tool.name="Output File",
 svg.uri="platform:/plugin/es.uca.modeling.cep.app.figures/svg/OutputFile.svg")
class OutputFile extends File, SinkElement, Destination {
	attr String path;
}

/*@gmf.node(figure="svg", label.placement="none", tool.name="Sink RDBMS",
 svg.uri="platform:/plugin/es.uca.modeling.cep.app.figures/svg/SinkRDBMS.svg")
class SinkRDBMS extends RDBMS, SinkElement, Destination{

}*/

/*@gmf.node(label.placement="none", tool.name="Sink Apache Hbase database")
class SinkHBase extends HBase, SinkElement, Destination{

}*/

/*@gmf.node(figure="svg", label.placement="none", tool.name="Sink MongoDB",
 svg.uri="platform:/plugin/es.uca.modeling.cep.app.figures/svg/MongoDB.svg")
class SinkMongoDB extends MongoDB, SinkElement, Destination{

}

@gmf.node(figure="svg", label.placement="none", tool.name="Sink HTTP",
 svg.uri="platform:/plugin/es.uca.modeling.cep.app.figures/svg/SinkHttp.svg")
class SinkHttp extends Http, SinkElement, Destination {
	attr String basic_auth_username;
	attr String basic_auth_password;
}*/

@gmf.node(figure="svg", label.placement="none", tool.name="Sink MQTT",
 svg.uri="platform:/plugin/es.uca.modeling.cep.app.figures/svg/SinkMqtt.svg")
class SinkMqtt extends MQTT, SinkElement, Destination{

}


//Enum Part

/*enum twitter_mode {
	streaming;
	polling;
}*/

enum MappingType {
	PassThrough; //Default one
	json;
	xml;
	csv; 
}

enum PropertyTypeValue {
   Unknown;
   Boolean;
   Integer;
   Long;
   Double;
   Float;
   String;
}


