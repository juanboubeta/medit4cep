package Voting;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple2;
import org.web3j.tuples.generated.Tuple6;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

public class Voting extends Contract {
    private static final String BINARY = "608060405234801561001057600080fd5b50604051610aec380380610aec8339818101604052606081101561003357600080fd5b81019080805164010000000081111561004b57600080fd5b8201602081018481111561005e57600080fd5b815164010000000081118282018710171561007857600080fd5b5050929190602001805164010000000081111561009457600080fd5b820160208101848111156100a757600080fd5b81516401000000008111828201871017156100c157600080fd5b505092919060200180516401000000008111156100dd57600080fd5b820160208101848111156100f057600080fd5b815164010000000081118282018710171561010a57600080fd5b505060408051808201909152868152600060208083018290526001805480820180835591909352835180519598509096509294506002909102600080516020610acc8339815191520192610161928492019061023f565b506020918201516001918201556040805180820190915285815260008184018190528254808401808555939091528151805193955091936002909102600080516020610acc83398151915201926101bb928492019061023f565b506020918201516001918201556040805180820190915284815260008184018190528254808401808555939091528151805193955091936002909102600080516020610acc8339815191520192610215928492019061023f565b50602091909101516001909101555050600280546001600160a01b03191633179055506102da9050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061028057805160ff19168380011785556102ad565b828001600101855582156102ad579182015b828111156102ad578251825591602001919060010190610292565b506102b99291506102bd565b5090565b6102d791905b808211156102b957600081556001016102c3565b90565b6107e3806102e96000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806336c8c5ee146100675780638da5cb5b14610086578063c3dce91f146100aa578063df2d5ec7146100d9578063f6d42f1514610175578063fd47b368146102d6575b600080fd5b6100846004803603602081101561007d57600080fd5b50356102fc565b005b61008e6103ab565b604080516001600160a01b039092168252519081900360200190f35b6100c7600480360360208110156100c057600080fd5b50356103ba565b60408051918252519081900360200190f35b6100f6600480360360208110156100ef57600080fd5b50356103e2565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610139578181015183820152602001610121565b50505050905090810190601f1680156101665780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b61017d610495565b6040518080602001878152602001806020018681526020018060200185815260200184810384528a818151815260200191508051906020019080838360005b838110156101d45781810151838201526020016101bc565b50505050905090810190601f1680156102015780820380516001836020036101000a031916815260200191505b5084810383528851815288516020918201918a019080838360005b8381101561023457818101518382015260200161021c565b50505050905090810190601f1680156102615780820380516001836020036101000a031916815260200191505b50848103825286518152865160209182019188019080838360005b8381101561029457818101518382015260200161027c565b50505050905090810190601f1680156102c15780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b610084600480360360208110156102ec57600080fd5b50356001600160a01b0316610728565b3360009081526020819052604090206001015460ff161561031c57600080fd5b33600090815260208190526040902054600180548390811061033a57fe5b906000526020600020906002020160010154016001828154811061035a57fe5b6000918252602080832060016002909302019190910192909255338152908190526040902054156103a8573360009081526020819052604081209081556001908101805460ff191690911790555b50565b6002546001600160a01b031681565b6000600182815481106103c957fe5b9060005260206000209060020201600101549050919050565b600181815481106103ef57fe5b60009182526020918290206002918202018054604080516001831615610100026000190190921693909304601f8101859004850282018501909352828152909350918391908301828280156104855780601f1061045a57610100808354040283529160200191610485565b820191906000526020600020905b81548152906001019060200180831161046857829003601f168201915b5050505050908060010154905082565b60606000606060006060600060016000815481106104af57fe5b906000526020600020906002020160000160016000815481106104ce57fe5b906000526020600020906002020160010154600180815481106104ed57fe5b90600052602060002090600202016000016001808154811061050b57fe5b906000526020600020906002020160010154600160028154811061052b57fe5b9060005260206000209060020201600001600160028154811061054a57fe5b906000526020600020906002020160010154858054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105f15780601f106105c6576101008083540402835291602001916105f1565b820191906000526020600020905b8154815290600101906020018083116105d457829003601f168201915b5050875460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959b508994509250840190508282801561067f5780601f106106545761010080835404028352916020019161067f565b820191906000526020600020905b81548152906001019060200180831161066257829003601f168201915b5050855460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529599508794509250840190508282801561070d5780601f106106e25761010080835404028352916020019161070d565b820191906000526020600020905b8154815290600101906020018083116106f057829003601f168201915b50505050509150955095509550955095509550909192939495565b6002546001600160a01b0316331461073f57600080fd5b6001600160a01b03811660009081526020819052604090206001015460ff161561076857600080fd5b6040805180820182526001808252600060208084018281526001600160a01b03969096168252819052929092209051815591519101805460ff191691151591909117905556fea265627a7a72305820e6202651361c8f06e3787a8cee40040b5f1f4babee3660bec75e9a21445ef02b64736f6c63430005090032b10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6";

    public static final String FUNC_VOTEFORCANDIDATE = "voteForCandidate";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_GETVOTEFORCANDIDATE = "getVoteForCandidate";

    public static final String FUNC_CANDIDATESLIST = "candidatesList";

    public static final String FUNC_GETALLCANDIDATESWITHVOTES = "getAllCandidatesWithVotes";

    public static final String FUNC_AUTHORIZEVOTER = "authorizeVoter";

    @Deprecated
    protected Voting(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Voting(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Voting(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Voting(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<TransactionReceipt> voteForCandidate(BigInteger _index) {
        final Function function = new Function(
                FUNC_VOTEFORCANDIDATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_index)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> owner() {
        final Function function = new Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> getVoteForCandidate(BigInteger _index) {
        final Function function = new Function(FUNC_GETVOTEFORCANDIDATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_index)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<Tuple2<String, BigInteger>> candidatesList(BigInteger param0) {
        final Function function = new Function(FUNC_CANDIDATESLIST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
        return new RemoteCall<Tuple2<String, BigInteger>>(
                new Callable<Tuple2<String, BigInteger>>() {
                    @Override
                    public Tuple2<String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<String, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue());
                    }
                });
    }

    public RemoteCall<Tuple6<String, BigInteger, String, BigInteger, String, BigInteger>> getAllCandidatesWithVotes() {
        final Function function = new Function(FUNC_GETALLCANDIDATESWITHVOTES, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
        return new RemoteCall<Tuple6<String, BigInteger, String, BigInteger, String, BigInteger>>(
                new Callable<Tuple6<String, BigInteger, String, BigInteger, String, BigInteger>>() {
                    @Override
                    public Tuple6<String, BigInteger, String, BigInteger, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple6<String, BigInteger, String, BigInteger, String, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (String) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> authorizeVoter(String _address) {
        final Function function = new Function(
                FUNC_AUTHORIZEVOTER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static Voting load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Voting(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Voting load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Voting(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Voting load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Voting(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Voting load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Voting(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Voting> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _candidate1, String _candidate2, String _candidate3) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_candidate1), 
                new org.web3j.abi.datatypes.Utf8String(_candidate2), 
                new org.web3j.abi.datatypes.Utf8String(_candidate3)));
        return deployRemoteCall(Voting.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<Voting> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _candidate1, String _candidate2, String _candidate3) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_candidate1), 
                new org.web3j.abi.datatypes.Utf8String(_candidate2), 
                new org.web3j.abi.datatypes.Utf8String(_candidate3)));
        return deployRemoteCall(Voting.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<Voting> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _candidate1, String _candidate2, String _candidate3) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_candidate1), 
                new org.web3j.abi.datatypes.Utf8String(_candidate2), 
                new org.web3j.abi.datatypes.Utf8String(_candidate3)));
        return deployRemoteCall(Voting.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<Voting> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _candidate1, String _candidate2, String _candidate3) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_candidate1), 
                new org.web3j.abi.datatypes.Utf8String(_candidate2), 
                new org.web3j.abi.datatypes.Utf8String(_candidate3)));
        return deployRemoteCall(Voting.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }
}